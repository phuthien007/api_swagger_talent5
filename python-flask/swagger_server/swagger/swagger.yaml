openapi: 3.0.0
info:
  title: Swagger Petstore
  description: "This is a sample Petstore server.  You can find\nout more about Swagger\
    \ at\n[http://swagger.io](http://swagger.io) or on\n[irc.freenode.net, #swagger](http://swagger.io/irc/).\n"
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
tags:
- name: teachers
  description: field name teachers
- name: courses
  description: field name courses
- name: classes
  description: field name classes
- name: students
  description: field name students
- name: users
  description: field name users
- name: registrations
  description: field name registrations
- name: events
  description: field name events
- name: exams
  description: field name exams
- name: exam_results
  description: field name exam_results
- name: plans
  description: field name plans
paths:
  /api/teachers:
    get:
      tags:
      - teachers
      summary: show all teachers
      description: method to get data teacher
      operationId: get_all_teachers
      parameters:
      - name: type_name
        in: query
        description: you can fill kw you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - full_name
          - email
          - phone
          - address
          - grade
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/teachers'
                x-content-type: application/json
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.teachers_controller
    put:
      tags:
      - teachers
      summary: method to update
      operationId: update_teacher
      requestBody:
        description: update teacher object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teachers'
        required: true
      responses:
        "200":
          description: return a teacher is updated
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.teachers_controller
    post:
      tags:
      - teachers
      summary: add a teacher
      description: method to add a teacher
      operationId: add_teacher
      requestBody:
        description: create teacher object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/teachers'
        required: true
      responses:
        "200":
          description: add success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teachers'
        "401":
          description: Unauthorized
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.teachers_controller
  /api/teachers/{teacher_id}:
    get:
      tags:
      - teachers
      summary: Show detail a teacher by id
      description: method to show info a teacher by teacher_id
      operationId: get_teacher_by_id
      parameters:
      - name: teacher_id
        in: path
        description: fill in id a teacher
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a teacher
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teachers'
            application/xml:
              schema:
                $ref: '#/components/schemas/teachers'
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.teachers_controller
    delete:
      tags:
      - teachers
      summary: delete a teacher by id
      description: method to delete a teacher by teacher_id
      operationId: del_teacher_by_id
      parameters:
      - name: teacher_id
        in: path
        description: fill in id a teacher
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.teachers_controller
  /api/courses:
    get:
      tags:
      - courses
      summary: show all courses
      description: method to get data course
      operationId: get_all_courses
      parameters:
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/courses'
                x-content-type: application/json
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.courses_controller
    put:
      tags:
      - courses
      summary: method to update
      operationId: update_course
      requestBody:
        description: update course object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courses'
        required: true
      responses:
        "200":
          description: return a course is updated
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.courses_controller
    post:
      tags:
      - courses
      summary: add a course
      description: method to add a course
      operationId: add_course
      requestBody:
        description: create course object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/courses'
        required: true
      responses:
        "200":
          description: add success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses'
        "401":
          description: Unauthorized
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /api/courses/{course_id}:
    get:
      tags:
      - courses
      summary: Show detail a course by id
      description: method to show info a course by course_id
      operationId: get_course_by_id
      parameters:
      - name: course_id
        in: path
        description: fill in id a course
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a course
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/courses'
            application/xml:
              schema:
                $ref: '#/components/schemas/courses'
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.courses_controller
    delete:
      tags:
      - courses
      summary: delete a course by id
      description: method to delete a course by course_id
      operationId: del_course_by_id
      parameters:
      - name: course_id
        in: path
        description: fill in id a course
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.courses_controller
  /api/classes:
    get:
      tags:
      - classes
      summary: show all classes
      description: method to get data course
      operationId: get_all_classes
      parameters:
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/classes'
                x-content-type: application/json
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.classes_controller
    put:
      tags:
      - classes
      summary: method to update
      operationId: update_class
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/classes'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/classes'
        required: true
      responses:
        "200":
          description: return a class is updated
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.classes_controller
    post:
      tags:
      - classes
      summary: add a class
      description: method to add a class
      operationId: add_class
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/classes'
          application/xml:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/classes'
        required: true
      responses:
        "200":
          description: add success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classes'
        "401":
          description: Unauthorized
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.classes_controller
  /api/classes/{class_id}:
    get:
      tags:
      - classes
      summary: Show detail a class by id
      description: method to show info a class by class_id
      operationId: get_classes_by_id
      parameters:
      - name: class_id
        in: path
        description: fill in id a class
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a class
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/classes'
            application/xml:
              schema:
                $ref: '#/components/schemas/classes'
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.classes_controller
    delete:
      tags:
      - classes
      summary: delete a class by id
      description: method to delete a class by class_id
      operationId: del_class_by_id
      parameters:
      - name: class_id
        in: path
        description: fill in id a class
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.classes_controller
  /api/students:
    get:
      tags:
      - students
      summary: show all students
      description: method to get data student
      operationId: get_all_students
      parameters:
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/students'
                x-content-type: application/json
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.students_controller
    put:
      tags:
      - students
      summary: method to update
      operationId: update_student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/students'
        required: true
      responses:
        "200":
          description: return a student is updated
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.students_controller
    post:
      tags:
      - students
      summary: add a student
      description: method to add a student
      operationId: add_student
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/students'
        required: true
      responses:
        "200":
          description: add success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/students'
        "401":
          description: Unauthorized
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.students_controller
  /api/students/{student_id}:
    get:
      tags:
      - students
      summary: Show detail a student by id
      description: method to show info a student by student_id
      operationId: get_student_by_id
      parameters:
      - name: student_id
        in: path
        description: fill in id a student
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/students'
            application/xml:
              schema:
                $ref: '#/components/schemas/students'
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.students_controller
    delete:
      tags:
      - students
      summary: delete a student by id
      description: method to delete a student by student_id
      operationId: del_student_by_id
      parameters:
      - name: student_id
        in: path
        description: fill in id a student
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.students_controller
  /api/users:
    get:
      tags:
      - users
      summary: the method to show all users
      description: you can show all users
      operationId: get_all_users
      parameters:
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/users'
                x-content-type: application/json
        "404":
          description: not found
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.users_controller
    put:
      tags:
      - users
      summary: the method to register
      description: you can register user
      operationId: update_user
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
        required: true
      responses:
        "200":
          description: created success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.users_controller
    post:
      tags:
      - users
      summary: the method to register
      description: you can register user
      operationId: create_user
      requestBody:
        description: body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/users'
        required: true
      responses:
        "200":
          description: created success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /api/users/{user_id}:
    get:
      tags:
      - users
      summary: Show detail a user by id
      description: method to show info a user by student_id
      operationId: get_user_by_id
      parameters:
      - name: user_id
        in: path
        description: fill in id a student
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a student
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'
            application/xml:
              schema:
                $ref: '#/components/schemas/users'
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.users_controller
    delete:
      tags:
      - users
      summary: delete a user by id
      description: method to delete a user by user_id
      operationId: del_user_by_id
      parameters:
      - name: user_id
        in: path
        description: fill in id a user
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /api/user/login:
    post:
      tags:
      - users
      summary: log user into your system
      description: method to login user
      operationId: login_user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/body'
      responses:
        "200":
          description: login success
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: JSESSIONID = abcd12345 ; Path=/; HttpOnly
        "403":
          description: csrf_token fobbiden
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /api/events:
    get:
      tags:
      - events
      summary: show all events
      description: method to get data event
      operationId: get_all_events
      parameters:
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/events'
                x-content-type: application/json
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.events_controller
    put:
      tags:
      - events
      summary: method to update
      operationId: update_event
      requestBody:
        description: update event object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/events'
        required: true
      responses:
        "200":
          description: return a event is updated
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.events_controller
    post:
      tags:
      - events
      summary: add a event
      description: method to add a event
      operationId: add_event
      requestBody:
        description: create event object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/events'
        required: true
      responses:
        "200":
          description: add success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events'
        "401":
          description: Unauthorized
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.events_controller
  /api/events/{event_id}:
    get:
      tags:
      - events
      summary: Show detail a event by id
      description: method to show info a event by event_id
      operationId: get_event_by_id
      parameters:
      - name: event_id
        in: path
        description: fill in id a event
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/events'
            application/xml:
              schema:
                $ref: '#/components/schemas/events'
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.events_controller
    delete:
      tags:
      - events
      summary: delete a event by id
      description: method to delete a event by event_id
      operationId: del_event_by_id
      parameters:
      - name: event_id
        in: path
        description: fill in id a event
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.events_controller
  /api/exams:
    get:
      tags:
      - exams
      summary: show all exams
      description: method to get data exam
      operationId: get_all_exams
      parameters:
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/exams'
                x-content-type: application/json
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exams_controller
    put:
      tags:
      - exams
      summary: method to update
      operationId: update_exam
      requestBody:
        description: update exam object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exams'
        required: true
      responses:
        "200":
          description: return a exam is updated
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exams_controller
    post:
      tags:
      - exams
      summary: add a exam
      description: method to add a exam
      operationId: add_exam
      requestBody:
        description: create exam object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exams'
        required: true
      responses:
        "200":
          description: add success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exams'
        "401":
          description: Unauthorized
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exams_controller
  /api/exams/{exam_id}:
    get:
      tags:
      - exams
      summary: Show detail a exam by id
      description: method to show info a exam by exam_id
      operationId: get_exam_by_id
      parameters:
      - name: exam_id
        in: path
        description: fill in id a event
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a event
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exams'
            application/xml:
              schema:
                $ref: '#/components/schemas/exams'
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exams_controller
    delete:
      tags:
      - exams
      summary: delete a exam by id
      description: method to delete a exam by exam_id
      operationId: del_exam_by_id
      parameters:
      - name: exam_id
        in: path
        description: fill in id a exam
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exams_controller
  /api/exam_results:
    get:
      tags:
      - exam_results
      summary: show all exam_results
      description: method to get data exam_results
      operationId: get_all_exam_results
      parameters:
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/exam_results'
                x-content-type: application/json
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exam_results_controller
    put:
      tags:
      - exam_results
      summary: method to update
      operationId: update_exam_result
      requestBody:
        description: update exam_result object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exam_results'
        required: true
      responses:
        "200":
          description: return a exam_result is updated
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exam_results_controller
    post:
      tags:
      - exam_results
      summary: add a exam_result
      description: method to add a exam_result
      operationId: add_exam_result
      requestBody:
        description: create exam_result object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exam_results'
        required: true
      responses:
        "200":
          description: add success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exam_results'
        "401":
          description: Unauthorized
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exam_results_controller
  /api/exam_results/{exam_result_id}:
    get:
      tags:
      - exam_results
      summary: Show detail a exam_results by id
      description: method to show info a exam_result by exam_result_id
      operationId: get_exam_result_by_id
      parameters:
      - name: exam_result_id
        in: path
        description: fill in id a exam_result
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a exam_result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exam_results'
            application/xml:
              schema:
                $ref: '#/components/schemas/exam_results'
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exam_results_controller
    delete:
      tags:
      - exam_results
      summary: delete a exam_result by id
      description: method to delete a exam_result by exam_result_id
      operationId: del_exam_result_by_id
      parameters:
      - name: exam_result_id
        in: path
        description: fill in id a exam_result_id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.exam_results_controller
  /api/registrations:
    get:
      tags:
      - registrations
      summary: show all registrations
      description: method to get data registrations
      operationId: get_all_registrations
      parameters:
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/registrations'
                x-content-type: application/json
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.registrations_controller
    put:
      tags:
      - registrations
      summary: method to update
      operationId: update_registration
      requestBody:
        description: update registration object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registrations'
        required: true
      responses:
        "200":
          description: return a registration is updated
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.registrations_controller
    post:
      tags:
      - registrations
      summary: add a registrations
      description: method to add a registration
      operationId: add_registration
      requestBody:
        description: create exam_result object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/registrations'
        required: true
      responses:
        "200":
          description: add success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registrations'
        "401":
          description: Unauthorized
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.registrations_controller
  /api/registrations/{class_id}/{student_id}:
    get:
      tags:
      - registrations
      summary: Show detail a registrations by id
      description: method to show info a registration by registration_id
      operationId: get_registration_by_id
      parameters:
      - name: class_id
        in: path
        description: fill in id a class
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: student_id
        in: path
        description: fill in id a student
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/registrations'
            application/xml:
              schema:
                $ref: '#/components/schemas/registrations'
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.registrations_controller
    delete:
      tags:
      - registrations
      summary: delete a registration by id
      description: method to delete a registration by registration_id
      operationId: del_registration_by_id
      parameters:
      - name: class_id
        in: path
        description: fill in id a class
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      - name: student_id
        in: path
        description: fill in id a student
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.registrations_controller
  /api/plans:
    get:
      tags:
      - plans
      summary: show all plans
      description: method to get data plans
      operationId: get_all_plans
      parameters:
      - name: key_word
        in: query
        description: you can fill key word you want to search
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: page_num
        in: query
        description: number of page
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: records_per_page
        in: query
        description: number record in a page
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/plans'
                x-content-type: application/json
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.plans_controller
    put:
      tags:
      - plans
      summary: method to update
      operationId: update_plan
      requestBody:
        description: update plan object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plans'
        required: true
      responses:
        "200":
          description: return a plan is updated
        "400":
          description: bad request
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.plans_controller
    post:
      tags:
      - plans
      summary: add a plan
      description: method to add a plan
      operationId: add_plan
      requestBody:
        description: create plan object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/plans'
        required: true
      responses:
        "200":
          description: add success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plans'
        "401":
          description: Unauthorized
        "405":
          description: Method Not Allowed
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.plans_controller
  /api/plans/{plan_id}:
    get:
      tags:
      - plans
      summary: Show detail a plan by id
      description: method to show info a plan by plan_id
      operationId: get_plan_by_id
      parameters:
      - name: plan_id
        in: path
        description: fill in id a plan
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: infor a plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plans'
            application/xml:
              schema:
                $ref: '#/components/schemas/plans'
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.plans_controller
    delete:
      tags:
      - plans
      summary: delete a plan by id
      description: method to delete a plan by plan_id
      operationId: del_plan_by_id
      parameters:
      - name: plan_id
        in: path
        description: fill in id a plan_id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: success
        "400":
          description: bad request
      security:
      - bearer_auth: []
      x-openapi-router-controller: swagger_server.controllers.plans_controller
components:
  schemas:
    teachers:
      required:
      - full_name
      type: object
      properties:
        id:
          type: integer
          format: int64
        full_name:
          maxLength: 250
          type: string
        email:
          maxLength: 100
          type: string
          format: email
        phone:
          maxLength: 15
          type: string
        address:
          maxLength: 250
          type: string
        grade:
          maxLength: 20
          type: string
      description: Table Teachers
      example:
        full_name: full_name
        address: address
        phone: phone
        grade: grade
        id: 0
        email: ""
      xml:
        name: teachers
    courses:
      required:
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          maxLength: 200
          type: string
        type:
          maxLength: 50
          type: string
        create_date:
          type: string
          format: date-time
      description: table course
      example:
        name: name
        id: 0
        type: type
        create_date: 2000-01-23T04:56:07.000+00:00
      xml:
        name: courses
    classes:
      required:
      - course
      - name
      - teacher
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          maxLength: 250
          type: string
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        course:
          $ref: '#/components/schemas/courses'
        teacher:
          $ref: '#/components/schemas/teachers'
        status:
          maxLength: 20
          type: string
      example:
        end_date: 2000-01-23T04:56:07.000+00:00
        teacher:
          full_name: full_name
          address: address
          phone: phone
          grade: grade
          id: 0
          email: ""
        name: name
        course:
          name: name
          id: 0
          type: type
          create_date: 2000-01-23T04:56:07.000+00:00
        id: 0
        start_date: 2000-01-23T04:56:07.000+00:00
        status: status
      xml:
        name: classes
    students:
      required:
      - email
      - full_name
      type: object
      properties:
        id:
          type: integer
          format: int64
        full_name:
          maxLength: 250
          type: string
        address:
          maxLength: 250
          type: string
        email:
          maxLength: 100
          type: string
          format: email
        phone:
          maxLength: 15
          type: string
        birthday:
          type: string
          format: date
        note:
          maxLength: 2000
          type: string
        facebook:
          maxLength: 100
          type: string
        create_date:
          type: string
          format: date-time
      example:
        birthday: 2000-01-23
        note: note
        full_name: full_name
        address: address
        phone: phone
        facebook: facebook
        id: 0
        create_date: 2000-01-23T04:56:07.000+00:00
        email: ""
      xml:
        name: students
    registrations:
      required:
      - class
      - status
      - student
      type: object
      properties:
        student:
          $ref: '#/components/schemas/students'
        class:
          $ref: '#/components/schemas/classes'
        register_day:
          type: string
          format: date-time
        status:
          maxLength: 10
          type: string
        create_date:
          type: string
          format: date-time
      example:
        student:
          birthday: 2000-01-23
          note: note
          full_name: full_name
          address: address
          phone: phone
          facebook: facebook
          id: 0
          create_date: 2000-01-23T04:56:07.000+00:00
          email: ""
        register_day: 2000-01-23T04:56:07.000+00:00
        create_date: 2000-01-23T04:56:07.000+00:00
        class:
          end_date: 2000-01-23T04:56:07.000+00:00
          teacher:
            full_name: full_name
            address: address
            phone: phone
            grade: grade
            id: 0
            email: ""
          name: name
          course:
            name: name
            id: 0
            type: type
            create_date: 2000-01-23T04:56:07.000+00:00
          id: 0
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
        status: status
    events:
      required:
      - class
      - name
      - status
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          maxLength: 250
          type: string
        class:
          $ref: '#/components/schemas/classes'
        create_date:
          type: string
          format: date-time
        status:
          maxLength: 20
          type: string
        happen_date:
          type: string
          format: date-time
      example:
        name: name
        id: 0
        create_date: 2000-01-23T04:56:07.000+00:00
        class:
          end_date: 2000-01-23T04:56:07.000+00:00
          teacher:
            full_name: full_name
            address: address
            phone: phone
            grade: grade
            id: 0
            email: ""
          name: name
          course:
            name: name
            id: 0
            type: type
            create_date: 2000-01-23T04:56:07.000+00:00
          id: 0
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
        status: status
        happen_date: 2000-01-23T04:56:07.000+00:00
      xml:
        name: events
    exams:
      required:
      - course
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          maxLength: 500
          type: string
        course:
          $ref: '#/components/schemas/courses'
      example:
        name: name
        course:
          name: name
          id: 0
          type: type
          create_date: 2000-01-23T04:56:07.000+00:00
        id: 0
      xml:
        name: exams
    exam_results:
      required:
      - class
      - exam
      - score
      - student
      type: object
      properties:
        id:
          type: integer
          format: int64
        student:
          $ref: '#/components/schemas/students'
        exam:
          $ref: '#/components/schemas/exams'
        score:
          type: integer
          format: int32
        result_date:
          type: string
          format: date-time
        class:
          $ref: '#/components/schemas/classes'
        note:
          maxLength: 2000
          type: string
      example:
        exam:
          name: name
          course:
            name: name
            id: 0
            type: type
            create_date: 2000-01-23T04:56:07.000+00:00
          id: 0
        score: 6
        note: note
        student:
          birthday: 2000-01-23
          note: note
          full_name: full_name
          address: address
          phone: phone
          facebook: facebook
          id: 0
          create_date: 2000-01-23T04:56:07.000+00:00
          email: ""
        result_date: 2000-01-23T04:56:07.000+00:00
        id: 0
        class:
          end_date: 2000-01-23T04:56:07.000+00:00
          teacher:
            full_name: full_name
            address: address
            phone: phone
            grade: grade
            id: 0
            email: ""
          name: name
          course:
            name: name
            id: 0
            type: type
            create_date: 2000-01-23T04:56:07.000+00:00
          id: 0
          start_date: 2000-01-23T04:56:07.000+00:00
          status: status
      xml:
        name: exam_results
    plans:
      required:
      - course
      - name
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          maxLength: 100
          type: string
        course:
          $ref: '#/components/schemas/courses'
      example:
        name: name
        course:
          name: name
          id: 0
          type: type
          create_date: 2000-01-23T04:56:07.000+00:00
        id: 0
      xml:
        name: plans
    users:
      required:
      - email
      - fullname
      - password
      - username
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        fullname:
          type: string
        birthday:
          type: string
          format: date
        last_login_date:
          type: string
          format: date-time
        lockout_date:
          type: string
          format: date-time
        login_failed_count:
          type: number
        register_date:
          type: string
          format: date-time
        forgot_password_token:
          type: string
          format: base64
      description: the table user
      example:
        birthday: 2000-01-23
        password: ""
        login_failed_count: 6.02745618307040320615897144307382404804229736328125
        lockout_date: 2000-01-23T04:56:07.000+00:00
        register_date: 2000-01-23T04:56:07.000+00:00
        id: 0
        fullname: fullname
        forgot_password_token: forgot_password_token
        last_login_date: 2000-01-23T04:56:07.000+00:00
        email: ""
        username: username
      xml:
        name: users
    body:
      type: object
      properties:
        username:
          type: string
          description: fill username
        password:
          type: string
          description: fill password
          format: password
  requestBodies:
    teachers:
      description: body teacher
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/teachers'
        application/xml:
          schema:
            $ref: '#/components/schemas/teachers'
      required: true
    courses:
      description: body Courses
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/courses'
        application/xml:
          schema:
            $ref: '#/components/schemas/courses'
      required: true
    classes:
      description: body Classes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/classes'
        application/xml:
          schema:
            $ref: '#/components/schemas/classes'
      required: true
    students:
      description: body Students
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/students'
        application/xml:
          schema:
            $ref: '#/components/schemas/students'
      required: true
    registrations:
      description: body Registrations
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/registrations'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/registrations'
    events:
      description: body Events
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/events'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/events'
      required: true
    exams:
      description: body Exams
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/exams'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/exams'
      required: true
    exam_results:
      description: body ExamResults
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/exam_results'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/exam_results'
      required: true
    plans:
      description: body Plans
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/plans'
        application/xml:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/plans'
      required: true
  securitySchemes:
    bearer_auth:
      type: http
      description: authentication bearer
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: swagger_server.controllers.authorization_controller.check_bearer_auth

